name: Android TV App CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'tv-app/package-lock.json'
    
    - name: Install Dependencies
      run: |
        cd tv-app
        npm install
    
    - name: Build Web App
      run: |
        cd tv-app
        npm run build
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Generate Keystore
      run: |
        cd tv-app/scripts
        chmod +x generate_keystore.sh
        ./generate_keystore.sh
    
    - name: Grant execute permission for gradlew
      run: |
        cd tv-app/android
        chmod +x gradlew
    
    - name: Sync Capacitor
      run: |
        cd tv-app
        npx cap sync android
    
    - name: Build Android TV App
      run: |
        cd tv-app/android
        ./gradlew assembleRelease
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tv-app/android/app/build/outputs/apk/release/app-release.apk
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 