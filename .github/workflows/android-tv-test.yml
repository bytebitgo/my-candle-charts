name: Android TV Emulator Test

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点运行

jobs:
  emulator-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Download Released APK
      run: |
        mkdir -p apk
        wget -O apk/mt5-candlechart-tv.apk https://github.com/bytebitgo/my-candle-charts/releases/download/v1.0.5/mt5-candlechart-tv.apk
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android system image
      run: |
        sdkmanager --install "platform-tools" "platforms;android-28" "emulator"
        sdkmanager --install "system-images;android-28;default;x86_64"
        echo "no" | avdmanager create avd --force -n test --abi "x86_64" --package "system-images;android-28;default;x86_64"
      
    - name: Run Emulator Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        target: default
        arch: x86_64
        profile: pixel_2
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -memory 2048
        disable-animations: true
        script: |
          # 等待模拟器启动
          adb wait-for-device
          
          # 等待系统启动完成
          timeout=300
          start_time=$(date +%s)
          while true; do
            if adb shell getprop sys.boot_completed 2>&1 | grep -q "1"; then
              echo "System has finished booting"
              break
            fi
            
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for system to boot"
              exit 1
            fi
            
            echo "Waiting for system to boot... ($elapsed seconds)"
            sleep 5
          done
          
          # 安装APK
          adb install apk/mt5-candlechart-tv.apk
          
          # 获取包名
          PACKAGE_NAME=$(aapt dump badging apk/mt5-candlechart-tv.apk | grep package | awk -F"'" '/package: name=/{print $2}')
          
          # 启动应用
          MAIN_ACTIVITY=$(aapt dump badging apk/mt5-candlechart-tv.apk | grep launchable-activity | awk -F"'" '/name=/{print $2}')
          adb shell am start -n "$PACKAGE_NAME/$MAIN_ACTIVITY"
          
          # 等待应用启动
          sleep 30
          
          # 截图保存
          adb shell screencap -p /sdcard/screenshot.png
          adb pull /sdcard/screenshot.png
          
          # 检查应用是否崩溃
          CRASHES=$(adb shell dumpsys activity processes | grep -i "crash")
          if [ ! -z "$CRASHES" ]; then
            echo "Application crashed!"
            exit 1
          fi
          
          # 检查应用是否响应
          RESPONSE=$(adb shell "pidof $PACKAGE_NAME")
          if [ -z "$RESPONSE" ]; then
            echo "Application not responding!"
            exit 1
          fi
          
          echo "Application test completed successfully"
          
    - name: Upload Test Screenshots
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: test-screenshots
        path: screenshot.png
        retention-days: 5
        
    - name: Upload Test Logs
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: test-logs
        path: ${{ github.workspace }}/*.log
        retention-days: 5 