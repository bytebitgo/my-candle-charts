name: Android TV Build and Test

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      actions: read
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: |
        cd tv-app
        npm install
        npm install @capacitor/cli @capacitor/core @capacitor/android
        
    - name: Build Web
      run: |
        cd tv-app
        npm run build
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Install build tools
      run: |
        sdkmanager "build-tools;33.0.0"
        echo "${ANDROID_HOME}/build-tools/33.0.0" >> $GITHUB_PATH
      
    - name: Generate Release Keystore
      run: |
        cd tv-app/android
        mkdir -p keystore
        keytool -genkey -v \
          -keystore keystore/release.keystore \
          -alias androiddebugkey \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -storepass android \
          -keypass android \
          -dname "CN=Android Debug,O=Android,C=US"

    - name: Create TV Banner
      run: |
        cd tv-app/android/app/src/main/res
        mkdir -p drawable
        cat > drawable/tv_banner.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
            <item>
                <shape android:shape="rectangle">
                    <solid android:color="#000000"/>
                    <size android:width="320dp" android:height="180dp"/>
                </shape>
            </item>
            <item android:gravity="center">
                <bitmap
                    android:src="@mipmap/ic_launcher"
                    android:gravity="center"/>
            </item>
        </layer-list>
        EOF
          
    - name: Create Android TV Manifest
      run: |
        cd tv-app/android/app/src/main
        cat > AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android">
            <uses-feature android:name="android.software.leanback" android:required="true" />
            <uses-feature android:name="android.hardware.touchscreen" android:required="false" />
            
            <application
                android:allowBackup="true"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:supportsRtl="true"
                android:banner="@drawable/tv_banner"
                android:theme="@style/AppTheme">

                <activity
                    android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|smallestScreenSize|screenLayout|uiMode"
                    android:name=".MainActivity"
                    android:label="@string/title_activity_main"
                    android:theme="@style/AppTheme.NoActionBarLaunch"
                    android:launchMode="singleTask"
                    android:exported="true">
                    
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                        <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
                    </intent-filter>

                </activity>

                <provider
                    android:name="androidx.core.content.FileProvider"
                    android:authorities="${applicationId}.fileprovider"
                    android:exported="false"
                    android:grantUriPermissions="true">
                    <meta-data
                        android:name="android.support.FILE_PROVIDER_PATHS"
                        android:resource="@xml/file_paths"></meta-data>
                </provider>
            </application>
        </manifest>
        EOF
        
    - name: Update Styles
      run: |
        cd tv-app/android/app/src/main/res/values
        cat > styles.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <style name="AppTheme" parent="@style/Theme.Leanback">
                <item name="android:windowBackground">@color/background</item>
                <item name="android:colorPrimary">@color/primary</item>
                <item name="android:colorPrimaryDark">@color/primary_dark</item>
                <item name="android:colorAccent">@color/accent</item>
            </style>

            <style name="AppTheme.NoActionBar" parent="Theme.AppCompat.DayNight.NoActionBar">
                <item name="windowActionBar">false</item>
                <item name="windowNoTitle">true</item>
                <item name="android:background">@null</item>
            </style>

            <style name="AppTheme.NoActionBarLaunch" parent="Theme.SplashScreen">
                <item name="android:background">@drawable/splash</item>
            </style>
        </resources>
        EOF
        
    - name: Sync Capacitor
      run: |
        cd tv-app
        npx cap sync android
        
    - name: Build Release APK
      run: |
        cd tv-app/android
        chmod +x gradlew
        ./gradlew assembleRelease --stacktrace
        
    - name: Verify APK
      run: |
        cd tv-app/android/app/build/outputs/apk/release
        # 验证APK是否包含必要的TV配置
        ${ANDROID_HOME}/build-tools/33.0.0/aapt dump badging app-release.apk | grep -q "android.software.leanback"
        if [ $? -ne 0 ]; then
          echo "Error: APK missing required TV feature"
          exit 1
        fi
        
    - name: Install Android Emulator
      run: |
        sdkmanager --install "platform-tools" "platforms;android-28" "emulator"
        sdkmanager --install "system-images;android-28;google_apis_playstore;x86_64"
        echo "no" | avdmanager create avd --force -n test --abi "x86_64" --package "system-images;android-28;google_apis_playstore;x86_64"
      
    - name: Test on Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 28
        target: google_apis_playstore
        arch: x86_64
        profile: tv_1080p
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
        disable-animations: true
        script: |
          # 等待模拟器启动
          adb wait-for-device
          
          # 等待系统启动完成
          while [ "$(adb shell getprop sys.boot_completed 2>/dev/null)" != "1" ]; do
            sleep 5
          done
          
          # 安装APK
          adb install tv-app/android/app/build/outputs/apk/release/app-release.apk
          
          # 获取包名和主Activity
          APK_PATH="tv-app/android/app/build/outputs/apk/release/app-release.apk"
          PACKAGE_NAME=$(aapt dump badging $APK_PATH | grep package | awk -F"'" '/package: name=/{print $2}')
          MAIN_ACTIVITY=$(aapt dump badging $APK_PATH | grep launchable-activity | awk -F"'" '/name=/{print $2}')
          
          # 启动应用
          adb shell am start -n "$PACKAGE_NAME/$MAIN_ACTIVITY"
          sleep 10
          
          # 检查应用是否正在运行
          if ! adb shell ps | grep -q $PACKAGE_NAME; then
            echo "Error: Application not running"
            exit 1
          fi
          
    - name: Upload Release APK
      if: success()
      uses: actions/upload-artifact@master
      with:
        name: android-tv-release
        path: tv-app/android/app/build/outputs/apk/release/app-release.apk
        retention-days: 5 